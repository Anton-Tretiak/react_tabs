{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","onTabSelected","selectedTabId","selectedTab","find","tab","id","className","map","classNames","href","onClick","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAACC,GACpC,IAAQC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,cACvBC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,MAAkBF,EAAK,GAEvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBACE,UAAQ,MACRE,UAAWE,IAAW,CAAE,YAAaN,EAAYG,KAAOD,EAAIC,KAF9D,SAKE,mBACE,UAAQ,UACRI,KAAI,WAAML,EAAIC,IACdK,QAAS,WACHR,EAAYG,KAAOD,EAAIC,IACzBL,EAAcI,IALpB,SASGA,EAAIO,SAXFP,EAAIC,WAkBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYU,cChCRb,EAAc,CACzB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASf,EAAK,GAAGM,IAA3D,mBAAOJ,EAAP,KAAsBc,EAAtB,KACMb,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIH,IAAkBG,EAAIC,MAM3D,OACE,sBAAKC,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,0CACsBJ,QADtB,IACsBA,OADtB,EACsBA,EAAaS,SAGnC,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAZiB,SAACI,GACtBW,EAAiBX,EAAIC,KAYjBJ,cAAeA,QC5BvBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fb31194a.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../Types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected(tab: Tab): void,\n};\n\nexport const Tabs: React.FC<Props> = (props) => {\n  const { tabs, onTabSelected, selectedTabId } = props;\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              className={classNames({ 'is-active': selectedTab.id === tab.id })}\n              key={tab.id}\n            >\n              <a\n                data-cy=\"TabLink\"\n                href={`#${tab.id}`}\n                onClick={() => {\n                  if (selectedTab.id !== tab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tab } from './Types/Tab';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const selectedTab = tabs.find(tab => selectedTabId === tab.id);\n\n  const handleTabClick = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab?.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        onTabSelected={handleTabClick}\n        selectedTabId={selectedTabId}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}